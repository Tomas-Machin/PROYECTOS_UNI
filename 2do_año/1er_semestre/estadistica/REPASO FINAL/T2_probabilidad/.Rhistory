comite = sample(personas, 5)
comite
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
algo = c(rep("H", 5))
table(algo) ==  c(3, 2)
table(algo) ==  c(3, 0)
table(algo) ==  3
length(table(comite))
source("~/.active-rstudio-document", echo=TRUE)
N = 5000
replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
FALSE
} else{
table(comite) == c(3, 2)
}
})
sum(sims) / N
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
FALSE
} else{
table(comite) == c(3, 2)
}
})
sum(sims) / N
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
FALSE
} else{
table(comite) == c(3, 2)
}
})
sum(sims) / N
sims
sum(all(sims)) / N
sims
sum(sims)
sims[1]
sims[1, 1]
sims[1]
all(sims[1])
sims[1]
sims[TRUE, TRUE]
sims[TRUE
sims[TRUE]
sims
sims == c(TRUE, TRUE)
sims[1] == c(TRUE, TRUE)
sims[1]
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
FALSE
} else{
table(comite) == c(3, 2)
}
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
FALSE
} else{
table(comite) == c(3, 2)
}
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
FALSE
} else{
table(comite) == c(3, 2)
}
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
FALSE
} else{
table(comite) == c(3, 2)
}
i = 0
N = 5000
replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i
} else{
table(comite) == c(3, 2)
i = i + 1
}
})
sum(i) / N
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i
} else{
table(comite) == c(3, 2)
i = i + 1
}
})
sims
sum(sims)
sum(sims) / N
sims[1:10]
comite
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = i
} else{
table(comite) == c(3, 2)
i = i + 1
}
})
sum(sims) / N
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
table(comite) == c(3, 2)
i = 1
}
})
sims
sum(sims) / N
sum(sims)
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
table(comite) == c(3, 2)
i = 1
}
})
sum(sims)
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
table(comite) == c(3, 2)
i = 1
}
})
sum(sims)
sims[1:10]
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
table(comite) == c(3, 2)
i = 1
}
})
sum(sims) / N
sims[1:10]
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
table(comite) == c(3, 2)
i = 1
}
})
sum(sims) / N
sims[1:10]
i = 0
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
table(comite) == c(3, 2)
i = 1
}
})
sum(sims) / N
sims[1:10]
source("~/.active-rstudio-document", echo=TRUE)
factorial(10)
estudiantes = c(rep("ADE", 6), rep("I", 4))
ranking = sample(estudiantes, 10)
ranking
ranking[1:4]
ranking[1:4] == C(rep("I", 4))
ranking[1:4] == c(rep("I", 4))
all(ranking[1:4] == c(rep("I", 4)))
sims = replicate(N, {
estudiantes = c(rep("ADE", 6), rep("I", 4))
ranking = sample(estudiantes, 10)
ranking
all(ranking[1:4] == c(rep("I", 4)))
)}
N = 5000
sims = replicate(N, {
estudiantes = c(rep("ADE", 6), rep("I", 4))
ranking = sample(estudiantes, 10)
ranking
all(ranking[1:4] == c(rep("I", 4)))
)}
N = 5000
sims = replicate(N, {
estudiantes = c(rep("ADE", 6), rep("I", 4))
ranking = sample(estudiantes, 10)
ranking
all(ranking[1:4] == c(rep("I", 4)))
})
sum(sims) / N
factorial(7)
solucion = factorial(7) / factorial(3) * factorial(2)
solucion
solucion = factorial(7) / (factorial(3) * factorial(2))
solucion
# A.- prob de q salga roja
sample(caja, 1) == "R"
caja = c(rep("R", 6), rep("B", 4), rep("A", 5))
# A.- prob de q salga roja
sample(caja, 1) == "R"
N = 5000
sims = replicate(N, {
sample(caja, 1) == "R"
})
sum(sims) / N
N = 5000
sims = replicate(N, {
sample(caja, 1) == "R"
})
sum(sims) / N
N = 5000
sims = replicate(N, {
sample(caja, 1) == "B"
})
sum(sims) / N
N = 5000
sims = replicate(N, {
sample(caja, 1) == "A"
})
sum(sims) / N
N = 5000
sims = replicate(N, {
sample(caja, 1) == "R"
})
1 - sum(sims) / N
N = 5000
sims_1 = replicate(N, {
sample(caja, 1) == "R"
})
N = 5000
sims_2 = replicate(N, {
sample(caja, 1) == "R"
})
sum(sims) + sum(sims_2) / N
N = 5000
sims_1 = replicate(N, {
sample(caja, 1) == "R"
})
N = 5000
sims_2 = replicate(N, {
sample(caja, 1) == "R"
})
sum(sims_1) / N + sum(sims_2) / N
N = 5000
sims_1 = replicate(N, {
sample(caja, 1) == "R"
})
N = 5000
sims_2 = replicate(N, {
sample(caja, 1) == "R"
})
sum(sims_1) / N + sum(sims_2) / N
N = 5000
sims_1 = replicate(N, {
sample(caja, 1) == "R"
})
N = 5000
sims_2 = replicate(N, {
sample(caja, 1) == "R"
})
sum(sims_1) / N + sum(sims_2) / N
N = 5000
sims_1 = replicate(N, {
sample(caja, 1) == "R"
})
N = 5000
sims_2 = replicate(N, {
sample(caja, 1) == "B"
})
sum(sims_1) / N + sum(sims_2) / N
dado = c(1:6)
dado
tirada = sample(dado, 1)
tirada
tirada = sample(dado, 2, replace = TRUE)
tirada
tirada == 3
all(tirada == 3 )
all(tirada == 3)
N = 5000
sims = replicate(N, {
dado = c(1:6)
tirada = sample(dado, 2, replace = TRUE)
tirada
all(tirada == 3)
})
sums(sims) / N
N = 5000
sims = replicate(N, {
dado = c(1:6)
tirada = sample(dado, 2, replace = TRUE)
tirada
all(tirada == 3)
})
sum(sims) / N
N = 5000
sims = replicate(N, {
dado = c(1:6)
tirada = sample(dado, 2, replace = TRUE)
tirada
any(tirada == 3)
})
sum(sims) / N
N = 5000
sims = replicate(N, {
dado = c(1:6)
tirada = sample(dado, 2, replace = TRUE)
tirada
any(tirada == 3)
})
sum(sims) / N
¿Cu´al es la probabilidad de obtener al menos un 3 en dos lanzamientos de un dado balanceado? (nos
all(table(comite) == c(3, 2))
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
all(table(comite) == c(3, 2))
}
})
sum(sims) / N
N = 5000
sims = replicate(N, {
personas = c(rep("H", 6), rep("M", 9))
comite = sample(personas, 5)
comite
if(length(table(comite)) == 1){
i = 0
} else{
all(table(comite) == c(3, 2))
}
})
sum(sims) / N
grupo = c(rep("O", 5), rep("A", 10))
source("C:/Users/machi/Downloads/CEU/segundo año/primer semestre/estadistica/REPASO FINAL/probabilidad/ej_9_pdf.R", echo=TRUE)
orden = sample(grupo, 15)
orden[4] == "O"
orden = sample(grupo, 15)
orden[4] == "O"
orden = sample(grupo, 15)
orden[4] == "O"
orden = sample(grupo, 15)
orden[4] == "O"
N = 5000
sims = replicate(N, {
orden = sample(grupo, 15)
orden[4] == "O"
})
sum(sims) / N
source("C:/Users/machi/Downloads/CEU/segundo año/primer semestre/estadistica/REPASO FINAL/probabilidad/ej_9_pdf.R", echo=TRUE)
N = 5000
sims = replicate(N, {
orden = sample(grupo, 15)
orden[12] == "O"
})
sum(sims) / N
grupo = c(rep("A", 10), paste(1:5, rep("O"))
grupo
grupo = c(rep("A", 10), paste(1:5, rep("O"), each = 1))
grupo
grupo = c(rep("A", 10), paste(1:5, rep("O")))
grupo
N = 5000
sims = replicate(N, {
orden = sample(grupo, 15)
orden[12] == "1 O"
})
sum(sims) / N
caja_A = c(rep("R", 5), rep("A", 3))
caja_B = c(rep("R", 2), rep("A", 3))
mano = c(sample(caja_A, 1), sample(caja_B, 1))
mano
table(mano) == "A"
table(mano) == 1
table(mano) == 2
mano == c("R", "R")
all(mano == c("R", "R"))
N = 5000
sims = replicate(N, {
mano = c(sample(caja_A, 1), sample(caja_B, 1))
all(mano == c("R", "R"))
})
sum(sims) / N
N = 5000
sims = replicate(N, {
mano = c(sample(caja_A, 1), sample(caja_B, 1))
any(mano == c("R", "N"))
})
sum(sims) / N
cond1 = (sim_2[1] == "C") & (sim_2[2] == "N")
sims_2 = replicate(N, {
sim_2 = sim_all()
cond1 = (sim_2[1] == "C") & (sim_2[2] == "N")
cond2 = sim_2[2] == "N"
c(cond1, cond2)
})
source("C:/Users/machi/Downloads/CEU/segundo año/primer semestre/estadistica/REPASO FINAL/probabilidad/bolas_y_monedas_(SIMULACIONES).R", echo=TRUE)
(sim_2[1] == "C") & (sim_2[2] == "N")
sims_2
source("C:/Users/machi/Downloads/CEU/segundo año/primer semestre/estadistica/REPASO FINAL/probabilidad/bolas_y_monedas_(SIMULACIONES).R", echo=TRUE)
sims_2
sim_2 = sim_all()
(sim_2[1] == "C") & (sim_2[2] == "N")
(sim_2[1] == "C") | (sim_2[2] == "N")
mano = c("R", "A") | c("A", "R")
mano = c("R", "A")
mano
sims = replicate(N, {
mano = c(sample(caja_A, 1), sample(caja_B, 1))
mano == c("R", "A")
mano
)
mano = c(sample(caja_A, 1), sample(caja_B, 1))
mano == c("R", "A")
source("~/.active-rstudio-document", echo=TRUE)
mano = c(sample(caja_A, 1), sample(caja_B, 1))
mano == c("R", "A")
mano = c(sample(caja_A, 1), sample(caja_B, 1))
mano == c("R", "A")
mano = c(sample(caja_A, 1), sample(caja_B, 1))
mano == c("R", "A")
source("~/.active-rstudio-document", echo=TRUE)
mano = c(sample(caja_A, 1), sample(caja_B, 1))
mano == c("R", "A")
all(mano == c("R", "A"))
N = 5000
sims = replicate(N, {
mano = c(sample(caja_A, 1), sample(caja_B, 1))
if(all(mano == c("R", "A"))){
TRUE
} else if(all(mano == c("A", "R"))){
TRUE
} else {
FALSE
}
})
sum(sims) / N
