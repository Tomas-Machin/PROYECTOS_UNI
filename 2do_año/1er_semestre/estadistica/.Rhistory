# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(i > 12){after_weight = weights$weight}
else{before_weight = weights$weight}
before = c(before, before_weight)
after = c(after, after_weight)
i = i + 1
}
before
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(i > 12){after_weight = weights$weight}
else{before_weight = weights$weight}
before = c(before, before_weight)
after = c(after, after_weight)
i = i + 1
}
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(i > 12){after_weight = weights[2, i]}
else{before_weight = weights[2, i]}
before = c(before, before_weight)
after = c(after, after_weight)
i = i + 1
}
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(i > 12){after_weight = weights[i, 2]}
else{before_weight = weights[i, 2]}
before = c(before, before_weight)
after = c(after, after_weight)
i = i + 1
}
before
after
before = c()
after = c()
before = c()
after = c()
before
after
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i <= 24){after_weight = weights[i, 2]}
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i =< 24){after_weight = weights[i, 2]}
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i < 25){after_weight = weights[i, 2]}
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i && i <= 24){after_weight = weights[i, 2]}
else{before_weight = weights[i, 2]}
before = c(before, before_weight)
after = c(after, after_weight)
i = i + 1
}
before
before = c()
after = c()
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i && i <= 24){after_weight = weights[i, 2]
after = c(after, after_weight)}
else{before_weight = weights[i, 2]
before = c(before, before_weight)}
i = i + 1
}
before
after
before
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i && i <= 24){after_weight = weights[i, c(1, 2)]
after = c(after, after_weight)}
else{before_weight = weights[i, c(1, 2)]
before = c(before, before_weight)}
i = i + 1
}
before
library(readr)
viagra <- read_csv("practica2/data/viagra.csv")
View(viagra)
data("iris")
data("viagra")
# 1) Visualizar
head(iris)
head(viagra)
View(iris)
?ggplot
??ggplot
?ggplot2
ggplot(iris, aes(x=Species, y = Sepal.Length, fill=Species)) + geom_boxplot() +
coord_flip()
ggplot(viagra, aes(x = dose, y = libido))
ggplot(homeo_weight_loss, aes(x = weight_loss_Kg)) +
geom_histogram(bins = bins)
View(new_york)
library(readr)
homeo_weight_loss <- read_csv("C:/Users/machi/Downloads/CEU/segundo año/estadistica/data_2/homeo_weight_loss.csv")
# 2.- encontrarun estadistico...
# se deben cumplir dos condiciones para usar t.test:
# poblacion infinita --> independencia entre muestras
# la poblacion es ersona q pueden llegar a usar un producto de perdida de
# la muestra es pequeña con respecto a esta poblacion
# distribucion normal --> es razonable en vista al histograma
library("tidyverse")
# 2.- encontrarun estadistico...
# se deben cumplir dos condiciones para usar t.test:
# poblacion infinita --> independencia entre muestras
# la poblacion es ersona q pueden llegar a usar un producto de perdida de
# la muestra es pequeña con respecto a esta poblacion
# distribucion normal --> es razonable en vista al histograma
library("tidyverse")
ggplot(pharma_weight_loss, aes(x = weight_loss_Kg)) + geom_histogram(bins = nbins)
library("tidyverse")
ggplot(viagra, aes(x = dose, y = libido))
ggplot(viagra, aes(x = dose, y = libido)) + geom_boxplot() +
coord_flip()
# 2) Especificar contrastes si tenemos alguna hipótesis específica
source("utils.R")
source("C:\Users\machi\Downloads\CEU\segundo año\primer semestre\estadistica\utils.R")
source("C:\sers\machi\Downloads\CEU\segundo año\primer semestre\estadistica\utils.R")
source("C:\users\machi\Downloads\CEU\segundo año\primer semestre\estadistica\utils.R")
source("C:\ers\machi\Downloads\CEU\segundo año\primer semestre\estadistica\utils.R")
source("C:\Users\machi\Downloads\CEU\segundo año\primer semestre\estadistica\data_1\utils.R")
source("C:/Users/machi/Downloads/CEU/segundo año/primer semestre/estadistica/data_1/utils.R", echo=TRUE)
source("C:\Users\machi\Downloads\CEU\segundo año\primer semestre\estadistica\data_1\utils.R")
source("utils.R")
source("Descargas\utils.R")
ggplot(iris, aes(x=Species, y = Sepal.Length, fill=Species)) + geom_boxplot() +
coord_flip()
ggplot(viagra, aes(x = dose, y = libido)) + geom_boxplot() +
coord_flip()
library(readr)
teengamb <- read_csv("practica2/data/teengamb.csv")
View(teengamb)
library(readr)
kobe <- read_csv("practica2/data/kobe.csv")
View(kobe)
# View(kobe)
sum(kobe$shot == "H")
racha = c()
for(shot in time){
racha = c(shot)
}
for(sh in shot){
racha = c(shot)
}
racha
before
weights$subject = i
weights <- read_csv("practica2/data/weights.csv")
# 1.-
weights$date = as.Date(weights$date, format="%d-%m-%y")
i = weights$subject
before = c()
after = c()
i = weights$subject
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i && i <= 24){after_weight = weights[i, c(1, 2)]
after = c(after, after_weight)}
else{before_weight = weights[i, c(1, 2)]
before = c(before, before_weight)}
i = i + 1
}
before
before = c()
after = c()
for (subject in date) {
subject_data = weights["subject" ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i && i <= 24){after_weight = weights["subject", c(1, 2)]
after = c(after, after_weight)}
else{before_weight = weights["subject", c(1, 2)]
before = c(before, before_weight)}
i = i + 1
}
subject_data
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(12 < i && i <= 24){after_weight = weights[i, c(1, 2)]
after = c(after, after_weight)}
else{before_weight = weights[i, c(1, 2)]
before = c(before, before_weight)}
i = i + 1
}
subject_data
weights = sort(weights[1, ])
weights = sort(weights[1, ], )
weights = sort(weights["subject", ])
weights = sort(weights["subject"])
weights <- read_csv("practica2/data/weights.csv")
# 1.-
weights$date = as.Date(weights$date, format="%d-%m-%y")
weights = sort(weights["subject"])
weights <- read_csv("practica2/data/weights.csv")
# View(weights)
# 1.-
weights$date = as.Date(weights$date, format="%d-%m-%y")
weights <- read_csv("practica2/data/weights.csv")
View(weights)
# 1.-
weights$date = as.Date(weights$date, format="%d-%m-%y")
weights = sort(weights["subject"])
?filter
order(weights)
order(weights, decreasing = TRUE)
order(weights$subject, decreasing = TRUE)
order(weights$subject, decreasing = FALSE)
order(c(weights$subject,weights$weight, weights$date), decreasing = FALSE)
ordenado <- weights[order(weights$subject), ]
ordenado
View(ordenado)
ordenado_2 <- weights[order(weights$date), ]
ordenado <- weights[order(weights$subject), ]
ordenado_2 <- weights[order(weights$date), ]
View(ordenado_2)
ordenado <- weights[order(weights$subject, weights$date), ]
View(ordenado)
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(i %% 2 == 0){after_weight = weights[i, c(1, 2)]
after = c(after, after_weight)}
else{before_weight = weights[i, c(1, 2)]
before = c(before, before_weight)}
i = i + 1
}
before
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(i %% 2 == 0){after_weight = ordenado[i, c(1, 2)]
after = c(after, after_weight)}
else{before_weight = ordenado[i, c(1, 2)]
before = c(before, before_weight)}
i = i + 1
}
before
bins = nclass.FD(ordenado$weight)
ggplot(ordenado, aes(x = weight)) +
geom_histogram(bins = bins)
bins = nclass.FD(ordenado$weight)
ggplot(ordenado, aes(y = weight)) +
geom_histogram(bins = bins)
bins = nclass.FD(ordenado$weight)
ggplot(ordenado, aes(x = weight)) +
geom_histogram(bins = bins)
antes = before
View(antes)
before = c()
after = c()
i = 1
for (subject in date) {
subject_data = weights[i ,"date"]  # selecciona los datos para "subject"
# subject_data tendrá solo dos filas. Averigua cuál de las dos fechas,
# subject_data[1, "date"] o subject_data[2, "date"], se corresponde
# con la medida "antes" y cuál con "después"
if(i %% 2 == 0){after_weight = ordenado[i, 2]
after = c(after, after_weight)}
else{before_weight = ordenado[i, 2]
before = c(before, before_weight)}
i = i + 1
}
antes = before
View(antes)
antes$weight
antes$Value
antes = before
antes_weight = before[, "weight"]
before
View(before)
bins = nclass.FD(before$weight)
ggplot(ordenado, aes(x = weight)) +
geom_histogram(bins = bins)
bins
bins = nclass.FD(homeo_weight_loss$weight_loss_Kg)
ggplot(homeo_weight_loss, aes(x = weight_loss_Kg)) +
geom_histogram(bins = bins)
View(new_york)
library(readr)
homeo_weight_loss <- read_csv("C:/Users/machi/Downloads/CEU/segundo año/estadistica/data_2/homeo_weight_loss.csv")
geom_histogram(bins = bins)
View(new_york)
library(readr)
homeo_weight_loss <- read_csv("C:/Users/machi/Downloads/CEU/segundo año/estadistica/data_2/homeo_weight_loss.csv")
# 2.-
bins = nclass.FD(before$weight)
ggplot(before, aes(x = weight)) +
geom_histogram(bins = bins)
# 2.-
bins = nclass.FD(rdenado$weight)
ggplot(ordenado, aes(x = weight)) +
geom_histogram(bins = bins)
# 2.-
bins = nclass.FD(rdenado$weight)
ggplot(ordenado, aes(x = weight)) +
geom_histogram(bins = bins)
bins = nclass.FD(ordenado$weight)
ggplot(ordenado, aes(x = weight)) +
geom_histogram(bins = bins)
rdenado
# 3.- conclusiones:
sum(weights$weight)
# 3.- conclusiones:
sum(weights$weight) / nrow(weights)
View(homeo_weight_loss)
?seq
ggplot(viagra, aes(x = dose, y = libido)) + geom_boxplot() +
coord_flip()
library("car")  # Anova
options(contrasts = c("contr.sum", "contr.poly"))   # ver utils.R
data("iris")
# 1) Visualizar
head(iris)
ggplot(iris, aes(x=Species, y = Sepal.Length, fill=Species)) + geom_boxplot() +
coord_flip()
# 2) Especificar contrastes si tenemos alguna hipótesis específica
source("utils.R")
my_contrasts = rbind(
"V - setosa" = c(-1, 0.5, 0.5),
"I - II" = c(0, 1, -1)
)
my_contrasts
?rbind
v_model = lm(Sepal.Length ~ Species, iris)
v_model
my_coding = get_contrasts_coding(my_contrasts)
contrasts(iris$Species) = my_coding
contrasts(iris$Species)
# 4.a)
summary(v_model)
confint(v_model)
?lm
contrasts(heights_earnings$ed)
contrasts(viagra$libido)
contrasts(viagra$dose)
contrasts(viagra)
?contrasts
heights_earnings$ed
View(heights_earnings)
contrasts(viagra$dose)
viagra <- read_csv("practica2/data/viagra.csv",
col_types = cols(dose = col_factor(levels = c())))
View(viagra)
contrasts(viagra$dose)
library(readr)
heights_earnings <- read_csv("data_5/data/heights_earnings.csv")
View(heights_earnings)
contrasts(heights_earnings$ed)
library(readr)
heights_earnings <- read_csv("data_5/data/heights_earnings.csv",
col_types = cols(ed = col_factor(levels = c())))
View(heights_earnings)
contrasts(heights_earnings$ed)
contrasts(heights_earnings$ed) = get_contrasts_coding(matriz)
matriz = rbind(
"elem-higher" = c(1, -0.5, -0.5),
"hs-uni" = c(0, 1, -1)
)
contrasts(heights_earnings$ed) = get_contrasts_coding(matriz)
get_contrasts_coding(matriz)
contrasts(heights_earnings$ed)
lm(log(earn) ~ log(height) + sex + ed, heights_earnings)
e_model
e_model = lm(log(earn) ~ log(height) + sex + ed, heights_earnings)
e_model
summary(e_model)
View(iris)
v_model = lm(libido ~ dose, viagra)
v_model
v_model_aov = Anova(v_model, type = 3)
v_model_aov
?Anova
v_model_aov = Anova(v_model, type = 2)   # el tipo ni idea  hay q verlo
v_model_aov
v_model_aov = Anova(v_model, type = 3)   # el tipo ni idea  hay q verlo
pairwise.t.test(viagra$libido, viagra$dose, p.adjust.method = "bonferroni")
v_model = lm(income ~ sex, teengamb)
confint()
confint(v_model)
bins = nclass.FD(teengamb$income)
ggplot(teengamb, aes(x = income)) +
geom_histogram(bins = bins)
# 3.- conclusiones:
t.test(weights$weight, mu = 1.5)
contrasts(viagra$dose)
contrasts(iris$Species)
## HECHO A MANO (TINO)
iris$Species = relevel(iris&Species, "setosa")
iris$Species
confint(v_model)
v_model = lm(Sepal.Length ~ Species, iris)
v_model
contrasts(iris$Species)
contrasts(viagra$dose)
relevel(iris&Species, "setosa")
viagra$dose = relevel(viagra&dose, "Placebo")
viagra$dose
relevel(viagra&dose, "Placebo")
viagra$dose = relevel(dose, "Placebo")
?relevel
viagra$dose = relevel(viagra&dose, "Low Dose")
get_contrasts_coding(my_contrasts)
ggplot(iris, aes(x=Species, y = Sepal.Length, fill=Species)) + geom_boxplot() +
coord_flip()
contrasts(viagra$dose)
viagra$dose = relevel(viagra&dose, "Placebo")
ggplot(iris, aes(x=Species, y = Sepal.Length, fill=Species)) + geom_boxplot() +
coord_flip()
library("tidyverse")
ggplot(iris, aes(x=Species, y = Sepal.Length, fill=Species)) + geom_boxplot() +
coord_flip()
levels(iris$Species)
levels(viagra)
levels(viagra$dose)
contrasts(iris$Species)
ggplot(heights_earnings, aes(x = height, y = earn, col = sex)) +
geom_jitter(alpha = 0.4) +  # concentracion de puntos
geom_smooth()
check_normality(e_model)
library("performance")
is_norm = check_normality(e_model)
is_norm
plot(is_norm, type = "qq")
viagra$dose = relevel(viagra&dose, "Placebo")
viagra$dose = relevel(viagra$dose, "Placebo")
relevel(viagra$dose, "Placebo")
viagra$dose
contrasts(viagra$dose)
# 1.-
contrasts(viagra$dose)
v_model = lm(libido ~ dose, viagra)
v_model_aov = Anova(v_model, type = 3)   # el tipo ni idea  hay q verlo
library("car")
v_model_aov = Anova(v_model, type = 3)   # el tipo ni idea  hay q verlo
v_model_aov
